@model QuestLibraryApplication.Models.BookModel.BookDB

<style>
    footer {
        position: fixed;
        bottom: 0px;
        width: 100%;
        padding: 20px;
        text-align: center;
    }

    label {
        font-weight: bold;
        padding-bottom: 10px;
        margin-top: 10px;
        margin-left: 5px;
    }

    .inputFields {
        margin-left: 5px;
    }

    .buttonCustomize {
        margin-left: 5px;
        margin-top: 20px;
    }
</style>
<div class="pb-3">
    <h4>Edit Book - @Html.DisplayFor(model => model.BookName)</h4>
    <hr />
</div>
<div class="m-4">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.BookID)

            <div class="form-group">
                @Html.LabelFor(model => model.BookName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BookName, new { htmlAttributes = new { @class = "form-control inputFields" } })
                    @Html.ValidationMessageFor(model => model.BookName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BookAuthor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BookAuthor, new { htmlAttributes = new { @class = "form-control inputFields" } })
                    @Html.ValidationMessageFor(model => model.BookAuthor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BookDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BookDescription, new { htmlAttributes = new { @class = "form-control inputFields" } })
                    @Html.ValidationMessageFor(model => model.BookDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BookPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BookPrice, new { htmlAttributes = new { @class = "form-control inputFields",@type="number" } })
                    @Html.ValidationMessageFor(model => model.BookPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReleasedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ReleasedDate, new { htmlAttributes = new { @class = "form-control inputFields",@type= "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.ReleasedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success buttonCustomize" style="width:13%;"/>
                    @Html.ActionLink("Back to List", "Index", null, new {@class= "btn btn-warning buttonCustomize", @style = "width:13%;" })
                </div>
            </div>
        </div>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
